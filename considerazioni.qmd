---
title: "Discussione dei risultati e analisi di potenza"
format: html
---

## Discussione dei risultati

Nel presente studio abbiamo replicato l'effetto di self-prioritization (SPE), un effetto ampiamente consolidato in letteratura, evidenziando tempi di reazione significativamente più rapidi per i trial matching associati al Sé rispetto a quelli associati allo sconosciuto. I risultati del t-test confermano che la differenza media tra le condizioni è robusta e statisticamente significativa.

Anche le misure di autostima esplicita (RSES) e implicita (SE_IAT, SE_RRT, SE_NLT) hanno mostrato distribuzioni coerenti con la letteratura esistente. Tuttavia, le analisi di correlazione non hanno evidenziato associazioni significative tra le misure di self-esteem (esplicite o implicite) e l'SPE, suggerendo che questi costrutti potrebbero avere basi cognitive distinte.

## Analisi di potenza (modello con 4 predittori)

In questa sezione esploriamo la potenza statistica associata a un modello con quattro predittori, tra cui misure di self-esteem implicito ed esplicito, per prevedere la variabilità individuale nello SPE. Usiamo simulazioni Monte Carlo con parametri realistici derivati dalla letteratura.

```{r}
# Parametri del modello simulato
b0 <- 75
b1 <- 8
b2 <- 30
b3 <- 29
b4 <- 15.5
sigma2 <- 625
sd_error <- sqrt(sigma2)
fam <- gaussian(link = "identity")

ns <- c(30, 31, 50, 70, 80, 100, 110, 120, 130, 140, 150, 200)
nsim <- 1000
power <- numeric(length(ns))

for (i in seq_along(ns)) {
  n <- ns[i]
  pvals_x1 <- numeric(nsim)
  pvals_x2 <- numeric(nsim)
  pvals_x3 <- numeric(nsim)
  pvals_x4 <- numeric(nsim)

  for (j in 1:nsim) {
    x1 <- rnorm(n, 0, 1)
    x2 <- rnorm(n, 0.61, 0.29)
    x3 <- rnorm(n, 0.52, 0.32)
    x4 <- rnorm(n, 0.1, 0.6)

    lp <- b0 + b1 * x1 + b2 * x2 + b3 * x3 + b4 * x4
    mu <- fam$linkinv(lp)
    y <- rnorm(n, mu, sd_error)

    fit <- glm(y ~ x1 + x2 + x3 + x4, family = fam)
    pvals_x1[j] <- summary(fit)$coefficients["x1", "Pr(>|t|)"]
    pvals_x2[j] <- summary(fit)$coefficients["x2", "Pr(>|t|)"]
    pvals_x3[j] <- summary(fit)$coefficients["x3", "Pr(>|t|)"]
    pvals_x4[j] <- summary(fit)$coefficients["x4", "Pr(>|t|)"]
  }

  power[i] <- mean((pvals_x1 <= 0.05) & (pvals_x2 <= 0.05) & 
                   (pvals_x3 <= 0.05) & (pvals_x4 <= 0.05))
}

# Salva i risultati in un dataframe
result <- data.frame(SampleSize = ns, Power = power)
result
# Calcola la potenza esatta per n = 31
exact_power_31 <- result$Power[result$SampleSize == 31]
exact_power_31
``` 

### Grafico della curva di potenza

```{r}
library(ggplot2)

plot_finale <- ggplot(result, aes(x = SampleSize, y = Power)) +
  geom_line(size = 0.9, color = "darkgrey", linetype = "dashed") +
  geom_point(size = 3, color = "darkgrey") +
  geom_vline(xintercept = 31, linetype = "dotted", color = "red") +
  annotate("text", x = 31, y = exact_power_31 + 0.05,
           label = paste0("n = 31\nPower = ", round(exact_power_31, 2)),
           color = "red", size = 4, hjust = -0.1) +
  scale_y_continuous(limits = c(0, 1.05), breaks = seq(0, 1, 0.25), expand = c(0, 0)) +
  scale_x_continuous(breaks = seq(30, 200, by = 20), limits = c(30, 200)) +
  labs(
    x = "Sample size",
    y = "Power"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    panel.grid.minor = element_blank(),
    theme_bw()
  )

plot_finale
```

Con una dimensione campionaria attuale di **n = 31**, la probabilità stimata di ottenere effetti statisticamente significativi per tutti e quattro i predittori è pari a **`r round(exact_power_31 * 100, 1)`%**, secondo le simulazioni Monte Carlo effettuate.


[← Torna alla pagina precedente](autostima.html)

